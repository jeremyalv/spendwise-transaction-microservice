plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
//	id "org.sonarqube" version "3.0"
}

group = 'com.spendwise.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
//	implementation 'org.springframework.boot:spring-boot-starter-security' // TODO use security later
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
	testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'

	// imports TestContainers
	testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
	testImplementation "org.testcontainers:testcontainers:1.18.0"
	testImplementation "org.testcontainers:junit-jupiter:1.18.0"

	// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//sonarqube {
//	properties {
//		property "sonar.java.coveragePlugin", "jacoco"
//		property "sonar.host.url", "https://sonarqube.cs.ui.ac.id"
//		property "sonar.coverage.jacoco.xmlReportPath", "${buildDir}/reports/jacoco.xml"
//	}
//}

tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}


tasks.jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/*Application**'])
		}))
	}
	dependsOn(tasks.test) // tests are required to run before generating the report
	reports {
		xml.required.set(false)
		csv.required.set(false)
		html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
	}
}

